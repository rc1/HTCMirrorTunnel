svg:not(:root) {
  overflow: hidden;
}
/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
  display: block;
}
body {
  line-height: 1;
}
ol, ul {
  list-style: none;
}
blockquote, q {
  quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  background-color: #616264;
  color: #ffffff;
}
img {
  display: block;
}
* {
  box-sizing: border-box;
}
#punter {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
}
.fixed {
  position: fixed;
}
.hidden {
  display: none;
}
.pointer {
  cursor: pointer;
}
.show-on {
  display: none;
}
@media all and (min-width: 1201px) {
  .fat-block {
    display: block;
  }
}
@media all and (min-width: 841px) and (max-width: 1200px) {
  .wide-block {
    display: block;
  }
}
@media all and (min-width: 531px) and (max-width: 840px) {
  .thin-block {
    display: block;
  }
}
@media all and (max-width: 530px) {
  .skinny-block {
    display: block;
  }
}
@media all and (min-width: 1201px) {
  .fat-inline {
    display: inline;
  }
}
@media all and (min-width: 841px) and (max-width: 1200px) {
  .wide-inline {
    display: inline;
  }
}
@media all and (min-width: 531px) and (max-width: 840px) {
  .thin-inline {
    display: inline;
  }
}
@media all and (max-width: 530px) {
  .skinny-inline {
    display: inline;
  }
}
body {
  -webkit-font-smoothing: antialiased;
  font-family: TimesNewRoman, Times New Roman, Times, Baskerville, Georgia, serif;
}
h1,
h2,
h3,
h4,
h5 {
  font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;
  font-weight: bold;
}

/*# sourceMappingURL=data:application/json;base64, */